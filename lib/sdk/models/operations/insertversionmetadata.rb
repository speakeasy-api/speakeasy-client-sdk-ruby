# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'
require_relative '../shared/versionmetadata'
require_relative '../shared/error'

module SpeakeasyClientSDK
  module Operations

    class InsertVersionMetadataRequest < SpeakeasyClientSDK::Utils::FieldAugmented
      extend T::Sig

      # The ID of the Api to insert metadata for.
      field :api_id, String, { 'path_param': { 'field_name': 'apiID', 'style': 'simple', 'explode': false } }
      # The version ID of the Api to insert metadata for.
      field :version_id, String, { 'path_param': { 'field_name': 'versionID', 'style': 'simple', 'explode': false } }
      # A JSON representation of the metadata to insert.
      field :version_metadata, Shared::VersionMetadataInput, { 'request': { 'media_type': 'application/json' } }


      sig { params(api_id: String, version_id: String, version_metadata: Shared::VersionMetadataInput).void }
      def initialize(api_id: nil, version_id: nil, version_metadata: nil)
        @api_id = api_id
        @version_id = version_id
        @version_metadata = version_metadata
      end
    end


    class InsertVersionMetadataResponse < SpeakeasyClientSDK::Utils::FieldAugmented
      extend T::Sig

      # HTTP response content type for this operation
      field :content_type, String
      # Raw HTTP response; suitable for custom response parsing
      field :raw_response, Faraday::Response
      # HTTP response status code for this operation
      field :status_code, Integer
      # Default error response
      field :error, T.nilable(Shared::Error)
      # OK
      field :version_metadata, T.nilable(Shared::VersionMetadata)


      sig { params(content_type: String, raw_response: Faraday::Response, status_code: Integer, error: T.nilable(Shared::Error), version_metadata: T.nilable(Shared::VersionMetadata)).void }
      def initialize(content_type: nil, raw_response: nil, status_code: nil, error: nil, version_metadata: nil)
        @content_type = content_type
        @raw_response = raw_response
        @status_code = status_code
        @error = error
        @version_metadata = version_metadata
      end
    end
  end
end
