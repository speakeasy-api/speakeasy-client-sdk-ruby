# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module SpeakeasyClientSDK
  module Shared
  

    class Diagnostic < ::SpeakeasyClientSDK::Utils::FieldAugmented
      extend T::Sig

      # Message describing the issue
      field :message, ::String, { 'format_json': { 'letter_case': ::SpeakeasyClientSDK::Utils.field_name('message') } }
      # Schema path to the issue
      field :path, T::Array[::String], { 'format_json': { 'letter_case': ::SpeakeasyClientSDK::Utils.field_name('path') } }
      # Issue type
      field :type, ::String, { 'format_json': { 'letter_case': ::SpeakeasyClientSDK::Utils.field_name('type') } }
      # Help message for how to fix the issue
      field :help_message, T.nilable(::String), { 'format_json': { 'letter_case': ::SpeakeasyClientSDK::Utils.field_name('helpMessage') } }


      sig { params(message: ::String, path: T::Array[::String], type: ::String, help_message: T.nilable(::String)).void }
      def initialize(message: nil, path: nil, type: nil, help_message: nil)
        @message = message
        @path = path
        @type = type
        @help_message = help_message
      end
    end
  end
end
