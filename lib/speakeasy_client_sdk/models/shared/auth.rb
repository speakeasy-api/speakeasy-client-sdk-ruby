# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module SpeakeasyClientSDK
  module Shared
  

    class Auth < ::SpeakeasyClientSDK::Utils::FieldAugmented
      extend T::Sig


      field :header, ::String, { 'format_json': { 'letter_case': ::SpeakeasyClientSDK::Utils.field_name('header') } }

      field :secret, ::String, { 'format_json': { 'letter_case': ::SpeakeasyClientSDK::Utils.field_name('secret') } }


      sig { params(header: ::String, secret: ::String).void }
      def initialize(header: nil, secret: nil)
        @header = header
        @secret = secret
      end
    end
  end
end
