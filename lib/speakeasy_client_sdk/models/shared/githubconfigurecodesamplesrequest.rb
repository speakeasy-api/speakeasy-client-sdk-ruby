# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module SpeakeasyClientSDK
  module Shared
  
    # A request to configure GitHub code samples
    class GithubConfigureCodeSamplesRequest < ::SpeakeasyClientSDK::Utils::FieldAugmented
      extend T::Sig

      # The GitHub organization name
      field :org, ::String, { 'format_json': { 'letter_case': ::SpeakeasyClientSDK::Utils.field_name('org') } }
      # The GitHub repository name
      field :repo, ::String, { 'format_json': { 'letter_case': ::SpeakeasyClientSDK::Utils.field_name('repo') } }
      # The target name for the code samples
      field :target_name, ::String, { 'format_json': { 'letter_case': ::SpeakeasyClientSDK::Utils.field_name('targetName') } }


      sig { params(org: ::String, repo: ::String, target_name: ::String).void }
      def initialize(org: nil, repo: nil, target_name: nil)
        @org = org
        @repo = repo
        @target_name = target_name
      end
    end
  end
end
