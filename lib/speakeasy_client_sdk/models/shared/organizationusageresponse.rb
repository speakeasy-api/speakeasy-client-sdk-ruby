# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module SpeakeasyClientSDK
  module Shared
  
    # A billing summary of organization usage
    class OrganizationUsageResponse < ::SpeakeasyClientSDK::Utils::FieldAugmented
      extend T::Sig

      # List of allowed languages
      field :allowed_languages, T::Array[::String], { 'format_json': { 'letter_case': ::SpeakeasyClientSDK::Utils.field_name('allowed_languages') } }
      # Total number of allowed languages, -1 if unlimited
      field :total_allowed_languages, ::Integer, { 'format_json': { 'letter_case': ::SpeakeasyClientSDK::Utils.field_name('total_allowed_languages') } }

      field :usage, T::Array[::SpeakeasyClientSDK::Shared::OrganizationUsage], { 'format_json': { 'letter_case': ::SpeakeasyClientSDK::Utils.field_name('usage') } }
      # Expiry date of the free trial, will be null if no trial
      field :free_trial_expiry, T.nilable(::DateTime), { 'format_json': { 'letter_case': ::SpeakeasyClientSDK::Utils.field_name('free_trial_expiry'), 'decoder': Utils.datetime_from_iso_format(true) } }


      sig { params(allowed_languages: T::Array[::String], total_allowed_languages: ::Integer, usage: T::Array[::SpeakeasyClientSDK::Shared::OrganizationUsage], free_trial_expiry: T.nilable(::DateTime)).void }
      def initialize(allowed_languages: nil, total_allowed_languages: nil, usage: nil, free_trial_expiry: nil)
        @allowed_languages = allowed_languages
        @total_allowed_languages = total_allowed_languages
        @usage = usage
        @free_trial_expiry = free_trial_expiry
      end
    end
  end
end
