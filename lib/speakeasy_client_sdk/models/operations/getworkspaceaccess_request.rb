# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module SpeakeasyClientSDK
  module Operations
  

    class GetWorkspaceAccessRequest < ::SpeakeasyClientSDK::Utils::FieldAugmented
      extend T::Sig

      # Unique identifier of the generation target.
      field :gen_lock_id, T.nilable(::String), { 'query_param': { 'field_name': 'genLockId', 'style': 'form', 'explode': true } }
      # Skip side-effects like incrementing metrics.
      field :passive, T.nilable(T::Boolean), { 'query_param': { 'field_name': 'passive', 'style': 'form', 'explode': true } }
      # The type of the generated target.
      field :target_type, T.nilable(::String), { 'query_param': { 'field_name': 'targetType', 'style': 'form', 'explode': true } }


      sig { params(gen_lock_id: T.nilable(::String), passive: T.nilable(T::Boolean), target_type: T.nilable(::String)).void }
      def initialize(gen_lock_id: nil, passive: nil, target_type: nil)
        @gen_lock_id = gen_lock_id
        @passive = passive
        @target_type = target_type
      end
    end
  end
end
