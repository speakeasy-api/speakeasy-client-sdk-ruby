# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module SpeakeasyClientSDK
  module Operations
  

    class GetEmbedAccessTokenRequest < ::SpeakeasyClientSDK::Utils::FieldAugmented
      extend T::Sig

      # The description of the embed access token.
      field :description, T.nilable(::String), { 'query_param': { 'field_name': 'description', 'style': 'form', 'explode': true } }
      # The duration (in minutes) of the embed access token.
      field :duration, T.nilable(::Integer), { 'query_param': { 'field_name': 'duration', 'style': 'form', 'explode': true } }
      # The filter to apply to the query.
      field :filters, T.nilable(::SpeakeasyClientSDK::Shared::Filters), { 'query_param': { 'field_name': 'filters', 'serialization': 'json' } }


      sig { params(description: T.nilable(::String), duration: T.nilable(::Integer), filters: T.nilable(::SpeakeasyClientSDK::Shared::Filters)).void }
      def initialize(description: nil, duration: nil, filters: nil)
        @description = description
        @duration = duration
        @filters = filters
      end
    end
  end
end
