# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module SpeakeasyClientSDK
  module Operations
  

    class Opts < ::SpeakeasyClientSDK::Utils::FieldAugmented
      extend T::Sig


      field :depth_style, T.nilable(::SpeakeasyClientSDK::Operations::DepthStyle), { 'format_json': { 'letter_case': ::SpeakeasyClientSDK::Utils.field_name('depth_style'), 'decoder': Utils.enum_from_string(::SpeakeasyClientSDK::Operations::DepthStyle, true) } }

      field :style, T.nilable(::SpeakeasyClientSDK::Operations::Style), { 'format_json': { 'letter_case': ::SpeakeasyClientSDK::Utils.field_name('style'), 'decoder': Utils.enum_from_string(::SpeakeasyClientSDK::Operations::Style, true) } }


      sig { params(depth_style: T.nilable(::SpeakeasyClientSDK::Operations::DepthStyle), style: T.nilable(::SpeakeasyClientSDK::Operations::Style)).void }
      def initialize(depth_style: nil, style: nil)
        @depth_style = depth_style
        @style = style
      end
    end
  end
end
