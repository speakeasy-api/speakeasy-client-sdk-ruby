# Code generated by Speakeasy (https://speakeasyapi.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module SpeakeasyClientSDK
  module Operations
  

    class GetWorkspaceEventsByTargetRequest < ::SpeakeasyClientSDK::Utils::FieldAugmented
      extend T::Sig

      # Filter to only return events corresponding to a particular gen_lock_id (gen_lock_id uniquely identifies a target)
      field :target_id, ::String, { 'path_param': { 'field_name': 'targetID', 'style': 'simple', 'explode': false } }
      # Filter to only return events created after this timestamp
      field :after_created_at, T.nilable(::DateTime), { 'query_param': { 'field_name': 'after_created_at', 'style': 'form', 'explode': true } }
      # Unique identifier of the workspace.
      field :workspace_id, T.nilable(::String), { 'path_param': { 'field_name': 'workspaceID', 'style': 'simple', 'explode': false } }


      sig { params(target_id: ::String, after_created_at: T.nilable(::DateTime), workspace_id: T.nilable(::String)).void }
      def initialize(target_id: nil, after_created_at: nil, workspace_id: nil)
        @target_id = target_id
        @after_created_at = after_created_at
        @workspace_id = workspace_id
      end
    end
  end
end
