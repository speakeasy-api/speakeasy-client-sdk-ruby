# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Operations
    

      class GetWorkspaceTargetsDeprecatedRequest
        extend T::Sig
        include Crystalline::MetadataFields

        # Unique identifier of the workspace.
        field :workspace_id, Crystalline::Nilable.new(::String), { 'path_param': { 'field_name': 'workspace_id', 'style': 'simple', 'explode': false } }
        # Filter to only return targets with events created after this timestamp
        field :after_last_event_created_at, Crystalline::Nilable.new(::DateTime), { 'query_param': { 'field_name': 'after_last_event_created_at', 'style': 'form', 'explode': true } }

        sig { params(workspace_id: T.nilable(::String), after_last_event_created_at: T.nilable(::DateTime)).void }
        def initialize(workspace_id: nil, after_last_event_created_at: nil)
          @workspace_id = workspace_id
          @after_last_event_created_at = after_last_event_created_at
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @workspace_id == other.workspace_id
          return false unless @after_last_event_created_at == other.after_last_event_created_at
          true
        end
      end
    end
  end
end
