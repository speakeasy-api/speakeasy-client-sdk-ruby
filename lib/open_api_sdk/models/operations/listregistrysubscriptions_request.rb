# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Operations
  

    class ListRegistrySubscriptionsRequest < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig

      # The event type
      field :event_type, T.nilable(::String), { 'query_param': { 'field_name': 'event_type', 'style': 'form', 'explode': true } }
      # The namespace name
      field :namespace_name, T.nilable(::String), { 'query_param': { 'field_name': 'namespace_name', 'style': 'form', 'explode': true } }
      # The subscription type
      field :subscription_type, T.nilable(::OpenApiSDK::Shared::SubscriptionType), { 'query_param': { 'field_name': 'subscription_type', 'style': 'form', 'explode': true } }
      # The tag
      field :tag, T.nilable(::String), { 'query_param': { 'field_name': 'tag', 'style': 'form', 'explode': true } }
      # The workspace ID
      field :workspace_id, T.nilable(::String), { 'path_param': { 'field_name': 'workspace_id', 'style': 'simple', 'explode': false } }


      sig { params(event_type: T.nilable(::String), namespace_name: T.nilable(::String), subscription_type: T.nilable(::OpenApiSDK::Shared::SubscriptionType), tag: T.nilable(::String), workspace_id: T.nilable(::String)).void }
      def initialize(event_type: nil, namespace_name: nil, subscription_type: nil, tag: nil, workspace_id: nil)
        @event_type = event_type
        @namespace_name = namespace_name
        @subscription_type = subscription_type
        @tag = tag
        @workspace_id = workspace_id
      end
    end
  end
end
