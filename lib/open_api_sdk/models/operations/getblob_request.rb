# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Operations
    

      class GetBlobRequest
        extend T::Sig
        include Crystalline::MetadataFields


        field :digest, ::String, { 'path_param': { 'field_name': 'digest', 'style': 'simple', 'explode': false } }

        field :namespace_name, ::String, { 'path_param': { 'field_name': 'namespace_name', 'style': 'simple', 'explode': false } }

        field :organization_slug, ::String, { 'path_param': { 'field_name': 'organization_slug', 'style': 'simple', 'explode': false } }

        field :workspace_slug, ::String, { 'path_param': { 'field_name': 'workspace_slug', 'style': 'simple', 'explode': false } }


        sig { params(digest: ::String, namespace_name: ::String, organization_slug: ::String, workspace_slug: ::String).void }
        def initialize(digest: nil, namespace_name: nil, organization_slug: nil, workspace_slug: nil)
          @digest = digest
          @namespace_name = namespace_name
          @organization_slug = organization_slug
          @workspace_slug = workspace_slug
        end

        def ==(other)
          return false unless other.is_a? self.class
          return false unless @digest == other.digest
          return false unless @namespace_name == other.namespace_name
          return false unless @organization_slug == other.organization_slug
          return false unless @workspace_slug == other.workspace_slug
          true
        end
      end
    end
  end
end
