# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Operations
    

      class SuggestOpenAPIRegistryRequest
        extend T::Sig
        include Crystalline::MetadataFields


        field :x_session_id, ::String, { 'header': { 'field_name': 'x-session-id', 'style': 'simple', 'explode': false } }

        field :namespace_name, ::String, { 'path_param': { 'field_name': 'namespace_name', 'style': 'simple', 'explode': false } }
        # Tag or digest
        field :revision_reference, ::String, { 'path_param': { 'field_name': 'revision_reference', 'style': 'simple', 'explode': false } }
        # Suggest options
        field :suggest_request_body, Crystalline::Nilable.new(Models::Shared::SuggestRequestBody), { 'request': { 'media_type': 'application/json' } }

        sig { params(x_session_id: ::String, namespace_name: ::String, revision_reference: ::String, suggest_request_body: T.nilable(Models::Shared::SuggestRequestBody)).void }
        def initialize(x_session_id:, namespace_name:, revision_reference:, suggest_request_body: nil)
          @x_session_id = x_session_id
          @namespace_name = namespace_name
          @revision_reference = revision_reference
          @suggest_request_body = suggest_request_body
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @x_session_id == other.x_session_id
          return false unless @namespace_name == other.namespace_name
          return false unless @revision_reference == other.revision_reference
          return false unless @suggest_request_body == other.suggest_request_body
          true
        end
      end
    end
  end
end
