# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Operations
    

      class CreateWorkspaceTokenRequest
        extend T::Sig
        include Crystalline::MetadataFields


        field :workspace_token, Models::Shared::WorkspaceToken, { 'request': { 'media_type': 'application/json' } }
        # Unique identifier of the workspace.
        field :workspace_id, Crystalline::Nilable.new(::String), { 'path_param': { 'field_name': 'workspace_id', 'style': 'simple', 'explode': false } }

        sig { params(workspace_token: Models::Shared::WorkspaceToken, workspace_id: T.nilable(::String)).void }
        def initialize(workspace_token:, workspace_id: nil)
          @workspace_token = workspace_token
          @workspace_id = workspace_id
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @workspace_token == other.workspace_token
          return false unless @workspace_id == other.workspace_id
          true
        end
      end
    end
  end
end
