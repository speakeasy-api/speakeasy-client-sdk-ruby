# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Operations
    

      class CheckGithubAccessRequest
        extend T::Sig
        include Crystalline::MetadataFields


        field :org, ::String, { 'query_param': { 'field_name': 'org', 'style': 'form', 'explode': true } }

        field :repo, ::String, { 'query_param': { 'field_name': 'repo', 'style': 'form', 'explode': true } }

        sig { params(org: ::String, repo: ::String).void }
        def initialize(org:, repo:)
          @org = org
          @repo = repo
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @org == other.org
          return false unless @repo == other.repo
          true
        end
      end
    end
  end
end
