# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Operations
    
      # The publishing token to update
      class UpdatePublishingTokenExpirationRequestBody
        extend T::Sig
        include Crystalline::MetadataFields

        # The new expiration date for the publishing token.
        field :valid_until, ::DateTime, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('valid_until'), 'decoder': Utils.datetime_from_iso_format(false) } }
        # The new name for the publishing token.
        field :token_name, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('token_name') } }


        sig { params(valid_until: ::DateTime, token_name: T.nilable(::String)).void }
        def initialize(valid_until: nil, token_name: nil)
          @valid_until = valid_until
          @token_name = token_name
        end

        def ==(other)
          return false unless other.is_a? self.class
          return false unless @valid_until == other.valid_until
          return false unless @token_name == other.token_name
          true
        end
      end
    end
  end
end
