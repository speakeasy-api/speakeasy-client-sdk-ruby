# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Operations
    
      # Job accepted, returns a job ID to poll for status and result
      class GenerateCodeSamplePreviewAsyncResponseBody
        extend T::Sig
        include Crystalline::MetadataFields

        # The job ID for polling
        field :job_id, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('job_id') } }
        # The current status of the job. Possible values are `pending` or `running`.
        field :status, Models::Shared::CodeSamplesJobStatus, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('status'), 'decoder': Utils.enum_from_string(Models::Shared::CodeSamplesJobStatus, false) } }


        sig { params(job_id: ::String, status: Models::Shared::CodeSamplesJobStatus).void }
        def initialize(job_id: nil, status: nil)
          @job_id = job_id
          @status = status
        end

        def ==(other)
          return false unless other.is_a? self.class
          return false unless @job_id == other.job_id
          return false unless @status == other.status
          true
        end
      end
    end
  end
end
