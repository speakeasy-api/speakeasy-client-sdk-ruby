# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Operations
    
      # The publishing token to create
      class CreatePublishingTokenRequestBody
        extend T::Sig
        include Crystalline::MetadataFields


        field :target_id, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('target_id'), required: true } }

        field :target_resource, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('target_resource'), required: true } }

        field :valid_until, ::DateTime, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('valid_until'), required: true, 'decoder': Utils.datetime_from_iso_format(false) } }

        field :token_name, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('token_name'), required: true } }

        sig { params(target_id: ::String, target_resource: ::String, valid_until: ::DateTime, token_name: ::String).void }
        def initialize(target_id:, target_resource:, valid_until:, token_name:)
          @target_id = target_id
          @target_resource = target_resource
          @valid_until = valid_until
          @token_name = token_name
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @target_id == other.target_id
          return false unless @target_resource == other.target_resource
          return false unless @valid_until == other.valid_until
          return false unless @token_name == other.token_name
          true
        end
      end
    end
  end
end
