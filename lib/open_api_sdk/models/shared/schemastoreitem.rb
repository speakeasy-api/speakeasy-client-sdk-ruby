# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Shared
    

      class SchemaStoreItem
        extend T::Sig
        include Crystalline::MetadataFields


        field :created_at, ::DateTime, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('created_at'), 'decoder': Utils.datetime_from_iso_format(false) } }

        field :format, Models::Shared::Format, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('format'), 'decoder': Utils.enum_from_string(Models::Shared::Format, false) } }

        field :id, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('id') } }

        field :package_name, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('packageName') } }

        field :sdk_classname, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('sdkClassname') } }

        field :spec, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('spec') } }


        sig { params(created_at: ::DateTime, format: Models::Shared::Format, id: ::String, package_name: ::String, sdk_classname: ::String, spec: ::String).void }
        def initialize(created_at: nil, format: nil, id: nil, package_name: nil, sdk_classname: nil, spec: nil)
          @created_at = created_at
          @format = format
          @id = id
          @package_name = package_name
          @sdk_classname = sdk_classname
          @spec = spec
        end

        def ==(other)
          return false unless other.is_a? self.class
          return false unless @created_at == other.created_at
          return false unless @format == other.format
          return false unless @id == other.id
          return false unless @package_name == other.package_name
          return false unless @sdk_classname == other.sdk_classname
          return false unless @spec == other.spec
          true
        end
      end
    end
  end
end
