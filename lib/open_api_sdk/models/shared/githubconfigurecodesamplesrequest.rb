# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Shared
    
      # A request to configure GitHub code samples
      class GithubConfigureCodeSamplesRequest
        extend T::Sig
        include Crystalline::MetadataFields

        # The GitHub organization name
        field :org, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('org'), required: true } }
        # The GitHub repository name
        field :repo, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('repo'), required: true } }
        # The target name for the code samples
        field :target_name, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('targetName'), required: true } }

        sig { params(org: ::String, repo: ::String, target_name: ::String).void }
        def initialize(org:, repo:, target_name:)
          @org = org
          @repo = repo
          @target_name = target_name
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @org == other.org
          return false unless @repo == other.repo
          return false unless @target_name == other.target_name
          true
        end
      end
    end
  end
end
