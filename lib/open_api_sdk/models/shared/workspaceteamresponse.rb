# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Shared
    
      # Workspace team response
      class WorkspaceTeamResponse
        extend T::Sig
        include Crystalline::MetadataFields


        field :users, Crystalline::Array.new(Models::Shared::User), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('users'), required: true } }
        # SSO metadata for a workspace
        field :sso_metadata, Crystalline::Nilable.new(Models::Shared::SSOMetadata), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('sso_metadata') } }

        sig { params(users: T::Array[Models::Shared::User], sso_metadata: T.nilable(Models::Shared::SSOMetadata)).void }
        def initialize(users:, sso_metadata: nil)
          @users = users
          @sso_metadata = sso_metadata
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @users == other.users
          return false unless @sso_metadata == other.sso_metadata
          true
        end
      end
    end
  end
end
