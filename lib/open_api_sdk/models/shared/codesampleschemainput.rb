# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Shared
    

      class CodeSampleSchemaInput
        extend T::Sig
        include Crystalline::MetadataFields

        # The language to generate code samples for
        field :language, ::String, { 'multipart_form': { 'field_name': 'language' } }
        # The OpenAPI file to be uploaded
        field :schema_file, Models::Shared::SchemaFile, { 'multipart_form': { 'file': true, 'field_name': 'schema_file' } }
        # The name of the package
        field :package_name, Crystalline::Nilable.new(::String), { 'multipart_form': { 'field_name': 'package_name' } }
        # The SDK class name
        field :sdk_class_name, Crystalline::Nilable.new(::String), { 'multipart_form': { 'field_name': 'sdk_class_name' } }
        # A list of operations IDs to generate code samples for
        field :operation_ids, Crystalline::Nilable.new(Crystalline::Array.new(::String)), { 'multipart_form': { 'field_name': 'operation_ids' } }

        sig { params(language: ::String, schema_file: Models::Shared::SchemaFile, package_name: T.nilable(::String), sdk_class_name: T.nilable(::String), operation_ids: T.nilable(T::Array[::String])).void }
        def initialize(language:, schema_file:, package_name: nil, sdk_class_name: nil, operation_ids: nil)
          @language = language
          @schema_file = schema_file
          @package_name = package_name
          @sdk_class_name = sdk_class_name
          @operation_ids = operation_ids
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @language == other.language
          return false unless @schema_file == other.schema_file
          return false unless @package_name == other.package_name
          return false unless @sdk_class_name == other.sdk_class_name
          return false unless @operation_ids == other.operation_ids
          true
        end
      end
    end
  end
end
