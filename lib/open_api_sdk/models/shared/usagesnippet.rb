# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Shared
    

      class UsageSnippet
        extend T::Sig
        include Crystalline::MetadataFields

        # The path of the operation
        field :path, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('path'), required: true } }
        # The HTTP method of the operation
        field :method, ::Object, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('method'), required: true } }
        # The operation ID for the snippet
        field :operation_id, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('operationId'), required: true } }
        # The language of the snippet
        field :language, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('language'), required: true } }
        # The code snippet
        field :code, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('code'), required: true } }

        sig { params(path: ::String, method: ::Object, operation_id: ::String, language: ::String, code: ::String).void }
        def initialize(path:, method:, operation_id:, language:, code:)
          @path = path
          @method = method
          @operation_id = operation_id
          @language = language
          @code = code
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @path == other.path
          return false unless @method == other.method
          return false unless @operation_id == other.operation_id
          return false unless @language == other.language
          return false unless @code == other.code
          true
        end
      end
    end
  end
end
