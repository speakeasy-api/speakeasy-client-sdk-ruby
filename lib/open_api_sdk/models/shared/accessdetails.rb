# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Shared
    

      class AccessDetails
        extend T::Sig
        include Crystalline::MetadataFields


        field :generation_allowed, Crystalline::Boolean.new, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('generation_allowed'), required: true } }

        field :message, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('message'), required: true } }

        field :level, Crystalline::Nilable.new(Models::Shared::Level), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('level'), 'decoder': Utils.enum_from_string(Models::Shared::Level, true) } }

        sig { params(generation_allowed: T::Boolean, message: ::String, level: T.nilable(Models::Shared::Level)).void }
        def initialize(generation_allowed:, message:, level: nil)
          @generation_allowed = generation_allowed
          @message = message
          @level = level
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @generation_allowed == other.generation_allowed
          return false unless @message == other.message
          return false unless @level == other.level
          true
        end
      end
    end
  end
end
