# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Shared
    

      class Relationship
        extend T::Sig
        include Crystalline::MetadataFields


        field :workspace_id, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('workspace_id'), required: true } }

        field :user_id, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('user_id'), required: true } }

        sig { params(workspace_id: ::String, user_id: ::String).void }
        def initialize(workspace_id:, user_id:)
          @workspace_id = workspace_id
          @user_id = user_id
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @workspace_id == other.workspace_id
          return false unless @user_id == other.user_id
          true
        end
      end
    end
  end
end
