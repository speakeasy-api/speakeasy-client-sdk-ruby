# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Shared
    

      class ShortURL
        extend T::Sig
        include Crystalline::MetadataFields


        field :short_url, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('short_url'), required: true } }

        field :full_url, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('full_url'), required: true } }

        sig { params(short_url: ::String, full_url: ::String).void }
        def initialize(short_url:, full_url:)
          @short_url = short_url
          @full_url = full_url
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @short_url == other.short_url
          return false unless @full_url == other.full_url
          true
        end
      end
    end
  end
end
