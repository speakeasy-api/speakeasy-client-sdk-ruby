# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Shared
    
      # Returns the requested manifest file
      class Manifest
        extend T::Sig
        include Crystalline::MetadataFields

        # Schema version
        field :schema_version, Crystalline::Nilable.new(::Integer), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('schemaVersion') } }
        # Media type usually application/vnd.docker.distribution.manifest.v2+json if this is in the accept header
        field :media_type, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('mediaType') } }
        # Type of artifact
        field :artifact_type, Crystalline::Nilable.new(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('artifactType') } }
        # Annotations
        field :annotations, Crystalline::Nilable.new(Models::Shared::Annotations), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('annotations') } }
        # List of V2 image layer information
        field :layers, Crystalline::Nilable.new(Crystalline::Array.new(Models::Shared::V2Descriptor)), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('layers') } }

        sig { params(schema_version: T.nilable(::Integer), media_type: T.nilable(::String), artifact_type: T.nilable(::String), annotations: T.nilable(Models::Shared::Annotations), layers: T.nilable(T::Array[Models::Shared::V2Descriptor])).void }
        def initialize(schema_version: nil, media_type: nil, artifact_type: nil, annotations: nil, layers: nil)
          @schema_version = schema_version
          @media_type = media_type
          @artifact_type = artifact_type
          @annotations = annotations
          @layers = layers
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @schema_version == other.schema_version
          return false unless @media_type == other.media_type
          return false unless @artifact_type == other.artifact_type
          return false unless @annotations == other.annotations
          return false unless @layers == other.layers
          true
        end
      end
    end
  end
end
