# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Shared
    
      # Request body of tags to add to a revision
      class AddTags
        extend T::Sig
        include Crystalline::MetadataFields

        # revision digest to add tags too sha256:...
        field :revision_digest, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('revision_digest'), required: true } }
        # string tags to add to the revision
        field :tags, Crystalline::Array.new(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('tags'), required: true } }

        sig { params(revision_digest: ::String, tags: T::Array[::String]).void }
        def initialize(revision_digest:, tags:)
          @revision_digest = revision_digest
          @tags = tags
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @revision_digest == other.revision_digest
          return false unless @tags == other.tags
          true
        end
      end
    end
  end
end
