# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Shared
    

      class SuggestItemsRequestBody
        extend T::Sig
        include Crystalline::MetadataFields

        # The list of "things" to get suggestions for. One suggestion will be returned for each item in the list.
        field :items, T::Array[::String], { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('items') } }
        # The prompt to use for the suggestion. Think of this as the "preamble".
        field :prompt, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('prompt') } }


        sig { params(items: T::Array[::String], prompt: ::String).void }
        def initialize(items: nil, prompt: nil)
          @items = items
          @prompt = prompt
        end

        def ==(other)
          return false unless other.is_a? self.class
          return false unless @items == other.items
          return false unless @prompt == other.prompt
          true
        end
      end
    end
  end
end
