# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Shared
  
    # An AccessToken is a token that can be used to authenticate with the Speakeasy API.
    class AccessToken < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :access_token, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('access_token') } }

      field :claims, ::OpenApiSDK::Shared::Claims, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('claims') } }

      field :user, ::OpenApiSDK::Shared::AccessTokenUser, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('user') } }

      field :feature_flags, T.nilable(T::Array[::OpenApiSDK::Shared::FeatureFlag]), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('feature_flags') } }

      field :workspaces, T.nilable(T::Array[::OpenApiSDK::Shared::Workspaces]), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('workspaces') } }


      sig { params(access_token: ::String, claims: ::OpenApiSDK::Shared::Claims, user: ::OpenApiSDK::Shared::AccessTokenUser, feature_flags: T.nilable(T::Array[::OpenApiSDK::Shared::FeatureFlag]), workspaces: T.nilable(T::Array[::OpenApiSDK::Shared::Workspaces])).void }
      def initialize(access_token: nil, claims: nil, user: nil, feature_flags: nil, workspaces: nil)
        @access_token = access_token
        @claims = claims
        @user = user
        @feature_flags = feature_flags
        @workspaces = workspaces
      end
    end
  end
end
