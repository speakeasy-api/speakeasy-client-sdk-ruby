# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Shared
  
    # A workspace token
    class WorkspaceToken < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :alg, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('alg') } }

      field :created_at, ::DateTime, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('created_at'), 'decoder': Utils.datetime_from_iso_format(false) } }

      field :id, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('id') } }

      field :key, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('key') } }

      field :name, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('name') } }

      field :workspace_id, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('workspace_id') } }

      field :created_by, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('created_by') } }

      field :email, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('email') } }

      field :last_used, T.nilable(::String), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('last_used') } }


      sig { params(alg: ::String, created_at: ::DateTime, id: ::String, key: ::String, name: ::String, workspace_id: ::String, created_by: T.nilable(::String), email: T.nilable(::String), last_used: T.nilable(::String)).void }
      def initialize(alg: nil, created_at: nil, id: nil, key: nil, name: nil, workspace_id: nil, created_by: nil, email: nil, last_used: nil)
        @alg = alg
        @created_at = created_at
        @id = id
        @key = key
        @name = name
        @workspace_id = workspace_id
        @created_by = created_by
        @email = email
        @last_used = last_used
      end
    end
  end
end
