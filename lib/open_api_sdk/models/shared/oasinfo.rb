# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Shared
    

      class OASInfo
        extend T::Sig
        include Crystalline::MetadataFields


        field :title, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('title'), required: true } }

        field :summary, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('summary'), required: true } }

        field :description, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('description'), required: true } }

        field :version, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('version'), required: true } }

        field :license, Models::Shared::License, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('license'), required: true } }

        sig { params(title: ::String, summary: ::String, description: ::String, version: ::String, license: Models::Shared::License).void }
        def initialize(title:, summary:, description:, version:, license:)
          @title = title
          @summary = summary
          @description = description
          @version = version
          @license = license
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @title == other.title
          return false unless @summary == other.summary
          return false unless @description == other.description
          return false unless @version == other.version
          return false unless @license == other.license
          true
        end
      end
    end
  end
end
