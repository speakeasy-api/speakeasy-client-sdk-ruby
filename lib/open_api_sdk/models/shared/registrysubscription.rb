# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Shared
  
    # A subscription to a registry event
    class RegistrySubscription < ::OpenApiSDK::Utils::FieldAugmented
      extend T::Sig


      field :created_at, ::DateTime, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('created_at'), 'decoder': Utils.datetime_from_iso_format(false) } }

      field :event_type, ::OpenApiSDK::Shared::EventType, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('event_type'), 'decoder': Utils.enum_from_string(::OpenApiSDK::Shared::EventType, false) } }

      field :id, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('id') } }

      field :namespace_name, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('namespace_name') } }

      field :subscription_settings, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('subscription_settings') } }

      field :subscription_type, ::OpenApiSDK::Shared::SubscriptionType, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('subscription_type'), 'decoder': Utils.enum_from_string(::OpenApiSDK::Shared::SubscriptionType, false) } }

      field :updated_at, ::DateTime, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('updated_at'), 'decoder': Utils.datetime_from_iso_format(false) } }

      field :workspace_id, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('workspace_id') } }

      field :deleted_at, T.nilable(::DateTime), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('deleted_at'), 'decoder': Utils.datetime_from_iso_format(true) } }

      field :tags, T.nilable(T::Array[::String]), { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('tags') } }


      sig { params(created_at: ::DateTime, event_type: ::OpenApiSDK::Shared::EventType, id: ::String, namespace_name: ::String, subscription_settings: ::String, subscription_type: ::OpenApiSDK::Shared::SubscriptionType, updated_at: ::DateTime, workspace_id: ::String, deleted_at: T.nilable(::DateTime), tags: T.nilable(T::Array[::String])).void }
      def initialize(created_at: nil, event_type: nil, id: nil, namespace_name: nil, subscription_settings: nil, subscription_type: nil, updated_at: nil, workspace_id: nil, deleted_at: nil, tags: nil)
        @created_at = created_at
        @event_type = event_type
        @id = id
        @namespace_name = namespace_name
        @subscription_settings = subscription_settings
        @subscription_type = subscription_type
        @updated_at = updated_at
        @workspace_id = workspace_id
        @deleted_at = deleted_at
        @tags = tags
      end
    end
  end
end
