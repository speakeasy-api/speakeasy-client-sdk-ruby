# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Shared
    

      class CompositeSpecMetadata
        extend T::Sig
        include Crystalline::MetadataFields

        # The subscription ID for the remote source subscription, if applicable. This indicates that the namespace is created by a remote source and thus is composite.
        field :subscription_id, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('subscription_id'), required: true } }

        field :subscription_settings, Models::Shared::RemoteSourceSubscriptionSettings, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('subscription_settings'), required: true } }

        sig { params(subscription_id: ::String, subscription_settings: Models::Shared::RemoteSourceSubscriptionSettings).void }
        def initialize(subscription_id:, subscription_settings:)
          @subscription_id = subscription_id
          @subscription_settings = subscription_settings
        end

        sig { params(other: T.untyped).returns(T::Boolean) }
        def ==(other)
          return false unless other.is_a? self.class
          return false unless @subscription_id == other.subscription_id
          return false unless @subscription_settings == other.subscription_settings
          true
        end
      end
    end
  end
end
