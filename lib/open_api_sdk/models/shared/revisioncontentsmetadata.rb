# Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

# typed: true
# frozen_string_literal: true


module OpenApiSDK
  module Models
    module Shared
    

      class RevisionContentsMetadata
        extend T::Sig
        include Crystalline::MetadataFields

        # Whether the OAS contains code samples.
        field :contains_code_samples, T::Boolean, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('contains_code_samples') } }

        field :created_at, ::DateTime, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('created_at'), 'decoder': Utils.datetime_from_iso_format(false) } }
        # The OAS description
        field :description, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('description') } }
        # The hash of the contents
        field :hash, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('hash') } }
        # The fully qualified namespace
        field :namespace, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('namespace') } }
        # The number of overlay actions in the OAS. Will be 0 if the OAS is not an overlay.
        field :num_overlay_actions, ::Integer, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('num_overlay_actions') } }
        # The operation IDs contained in the OAS. Will be empty if the OAS is an overlay.
        field :operation_ids, T::Array[::String], { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('operation_ids') } }
        # The digest of the parent bundle
        field :revision_digest, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('revision_digest') } }
        # The tags contained in the OAS -- NOT the OCI tags. Will be empty if the OAS is an overlay.
        field :tags, T::Array[::String], { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('tags') } }
        # The OAS title
        field :title, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('title') } }

        field :type, Models::Shared::RevisionContentsMetadataType, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('type'), 'decoder': Utils.enum_from_string(Models::Shared::RevisionContentsMetadataType, false) } }
        # The OAS version
        field :version, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('version') } }
        # The workspace ID
        field :workspace_id, ::String, { 'format_json': { 'letter_case': ::OpenApiSDK::Utils.field_name('workspace_id') } }


        sig { params(contains_code_samples: T::Boolean, created_at: ::DateTime, description: ::String, hash: ::String, namespace: ::String, num_overlay_actions: ::Integer, operation_ids: T::Array[::String], revision_digest: ::String, tags: T::Array[::String], title: ::String, type: Models::Shared::RevisionContentsMetadataType, version: ::String, workspace_id: ::String).void }
        def initialize(contains_code_samples: nil, created_at: nil, description: nil, hash: nil, namespace: nil, num_overlay_actions: nil, operation_ids: nil, revision_digest: nil, tags: nil, title: nil, type: nil, version: nil, workspace_id: nil)
          @contains_code_samples = contains_code_samples
          @created_at = created_at
          @description = description
          @hash = hash
          @namespace = namespace
          @num_overlay_actions = num_overlay_actions
          @operation_ids = operation_ids
          @revision_digest = revision_digest
          @tags = tags
          @title = title
          @type = type
          @version = version
          @workspace_id = workspace_id
        end

        def ==(other)
          return false unless other.is_a? self.class
          return false unless @contains_code_samples == other.contains_code_samples
          return false unless @created_at == other.created_at
          return false unless @description == other.description
          return false unless @hash == other.hash
          return false unless @namespace == other.namespace
          return false unless @num_overlay_actions == other.num_overlay_actions
          return false unless @operation_ids == other.operation_ids
          return false unless @revision_digest == other.revision_digest
          return false unless @tags == other.tags
          return false unless @title == other.title
          return false unless @type == other.type
          return false unless @version == other.version
          return false unless @workspace_id == other.workspace_id
          true
        end
      end
    end
  end
end
